{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\katia\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\firegram\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\katia\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\firegram\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\katia\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\firegram\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";import{projectStorage,projectFireStore,timestamp}from\"../firebase/config\";var useStorage=function useStorage(file){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),progress=_useState2[0],setProgress=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),url=_useState6[0],setUrl=_useState6[1];useEffect(function(){//referencias\nvar storageRef=projectStorage.ref(file.name);var collectionRef=projectFireStore.collection('images');storageRef.put(file).on('state_changed',function(snap){var percentage=snap.bytesTransferred/snap.totalBytes*100;setProgress(percentage);},function(err){setError(err);},/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var url,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return storageRef.getDownloadURL();case 2:url=_context.sent;createdAt=timestamp();collectionRef.add({url:url,createdAt:createdAt});setUrl(url);case 6:case\"end\":return _context.stop();}}},_callee);})));},[file]);return{progress:progress,url:url,error:error};};export default useStorage;","map":{"version":3,"sources":["C:/Users/katia/OneDrive/Área de Trabalho/firegram/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","projectFireStore","timestamp","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","createdAt","add"],"mappings":"4hBAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,cAAT,CAAyBC,gBAAzB,CAA2CC,SAA3C,KAA4D,oBAA5D,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAU,eACON,QAAQ,CAAC,CAAD,CADf,wCAClBO,QADkB,eACRC,WADQ,8BAECR,QAAQ,CAAC,IAAD,CAFT,yCAElBS,KAFkB,eAEXC,QAFW,8BAGHV,QAAQ,CAAC,IAAD,CAHL,yCAGlBW,GAHkB,eAGbC,MAHa,eAKzBX,SAAS,CAAC,UAAM,CACZ;AACA,GAAMY,CAAAA,UAAU,CAAGX,cAAc,CAACY,GAAf,CAAmBR,IAAI,CAACS,IAAxB,CAAnB,CACA,GAAMC,CAAAA,aAAa,CAAGb,gBAAgB,CAACc,UAAjB,CAA4B,QAA5B,CAAtB,CAGAJ,UAAU,CAACK,GAAX,CAAeZ,IAAf,EAAqBa,EAArB,CAAwB,eAAxB,CAAyC,SAACC,IAAD,CAAU,CAC/C,GAAIC,CAAAA,UAAU,CAAID,IAAI,CAACE,gBAAL,CAAwBF,IAAI,CAACG,UAA9B,CAA4C,GAA7D,CACAf,WAAW,CAACa,UAAD,CAAX,CACH,CAHD,CAGG,SAACG,GAAD,CAAS,CACRd,QAAQ,CAACc,GAAD,CAAR,CACH,CALD,sEAKG,2KACmBX,CAAAA,UAAU,CAACY,cAAX,EADnB,QACOd,GADP,eAEOe,SAFP,CAEmBtB,SAAS,EAF5B,CAGCY,aAAa,CAACW,GAAd,CAAkB,CAAEhB,GAAG,CAAHA,GAAF,CAAOe,SAAS,CAATA,SAAP,CAAlB,EACAd,MAAM,CAACD,GAAD,CAAN,CAJD,sDALH,IAWH,CAjBQ,CAiBN,CAACL,IAAD,CAjBM,CAAT,CAmBA,MAAO,CAAEC,QAAQ,CAARA,QAAF,CAAYI,GAAG,CAAHA,GAAZ,CAAiBF,KAAK,CAALA,KAAjB,CAAP,CACH,CAzBD,CA2BA,cAAeJ,CAAAA,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { projectStorage, projectFireStore, timestamp } from \"../firebase/config\";\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        //referencias\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFireStore.collection('images');\r\n\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n            setError(err);\r\n        }, async () =>{\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timestamp()\r\n            collectionRef.add({ url, createdAt })\r\n            setUrl(url);\r\n        })\r\n    }, [file]);\r\n\r\n    return { progress, url, error }\r\n}\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}